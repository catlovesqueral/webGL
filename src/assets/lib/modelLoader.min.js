function ModelLoader(n){this.textureLoader=void 0==n?new THREE.TextureLoader:n}ModelLoader.prototype.Load=function(n,q){var h=n.substr(0,n.lastIndexOf("/")),p=this;this.GetRawData(n,function(b){for(var m=new THREE.Geometry,a=0;a<b.vertexs.length;a+=3){var c=new THREE.Vector3;c.x=b.vertexs[a];c.y=b.vertexs[a+2];c.z=-b.vertexs[a+1];m.vertices.push(c)}allNormals=[];for(a=0;a<b.normal.length;a+=3)c=new THREE.Vector3,c.x=b.normal[a],c.y=b.normal[a+2],c.z=-b.normal[a+1],allNormals.push(c);allUv1=[];for(a=0;a<b.uv1.length;a+=2)c=new THREE.Vector2,c.x=b.uv1[a],c.y=b.uv1[a+1],allUv1.push(c);allUv2=[];for(a=0;a<b.uv2.length;a+=2)c=new THREE.Vector2,c.x=b.uv2[a],c.y=b.uv2[a+1],allUv2.push(c);for(a=0;a<b.triangles.length;a++)for(c=0;c<b.triangles[a].positionIndexs.length;c+=3)oneFace=new THREE.Face3,oneFace.a=b.triangles[a].positionIndexs[c],oneFace.b=b.triangles[a].positionIndexs[c+1],oneFace.c=b.triangles[a].positionIndexs[c+2],oneFace.vertexNormals.push(allNormals[b.triangles[a].normalIndexs[c]]),oneFace.vertexNormals.push(allNormals[b.triangles[a].normalIndexs[c+1]]),oneFace.vertexNormals.push(allNormals[b.triangles[a].normalIndexs[c+2]]),oneFace.materialIndex=b.triangles[a].matId,m.faces.push(oneFace);for(var d=[],a=0;a<b.triangles.length;a++)for(c=0;c<b.triangles[a].uv1Indexs.length;c+=3)oneTriangleUv1=[],oneTriangleUv1.push(allUv1[b.triangles[a].uv1Indexs[c]]),oneTriangleUv1.push(allUv1[b.triangles[a].uv1Indexs[c+1]]),oneTriangleUv1.push(allUv1[b.triangles[a].uv1Indexs[c+2]]),d.push(oneTriangleUv1);m.faceVertexUvs[0]=d;if(0<allUv2.length){d=[];for(a=0;a<b.triangles.length;a++)for(c=0;c<b.triangles[a].uv2Indexs.length;c+=3)oneTriangleUv2=[],oneTriangleUv2.push(allUv2[b.triangles[a].uv2Indexs[c]]),oneTriangleUv2.push(allUv2[b.triangles[a].uv2Indexs[c+1]]),oneTriangleUv2.push(allUv2[b.triangles[a].uv2Indexs[c+2]]),d.push(oneTriangleUv2);m.faceVertexUvs.push(d)}c=[];for(a=0;a<b.materialDatas.length;a++)d=new THREE.MeshPhongMaterial,c.push(d);m.mergeVertices();m=new THREE.Mesh(m,new THREE.MultiMaterial(c));for(a=0;a<b.materialDatas.length;a++)c=b.materialDatas[a].diffuseColor,d=new THREE.Color(c[0],c[1],c[2]),c=b.materialDatas[a].id,m.material.materials[c].color=d,1<b.materialDatas[a].diffusePath.length&&(d=p.textureLoader.load(h+b.materialDatas[a].diffusePath),d.wrapS=THREE.RepeatWrapping,d.wrapT=THREE.RepeatWrapping,m.material.materials[c].map=d),1<b.materialDatas[a].lightMapPath.length&&(d=p.textureLoader.load(h+b.materialDatas[a].lightMapPath),d.wrapS=THREE.RepeatWrapping,d.wrapT=THREE.RepeatWrapping,m.material.materials[c].lightMap=d);a=new THREE.Object3D;a.add(m);a.position.x=b.position[0];a.position.y=b.position[2];a.position.z=-b.position[1];c=new THREE.Vector3;c.x=-b.rotateAxis[0];c.y=-b.rotateAxis[2];c.z=b.rotateAxis[1];var d=-b.rotateAngle,e=new THREE.Quaternion;e.setFromAxisAngle(c,d);a.quaternion.copy(e);0<b.matrix.length&&(c=new THREE.Matrix4,c.fromArray([b.matrix[0],b.matrix[4],b.matrix[8],b.matrix[12],b.matrix[1],b.matrix[5],b.matrix[9],b.matrix[13],b.matrix[2],b.matrix[6],b.matrix[10],b.matrix[14],b.matrix[3],b.matrix[11],-b.matrix[7],b.matrix[15]]),m.applyMatrix(c));q(a)})};ModelLoader.prototype.GetRawData=function(n,q){var h={},p=new XMLHttpRequest;p.open("GET",n,!0);p.responseType="blob";p.onload=function(){var b=new FileReader;b.readAsArrayBuffer(p.response);b.onload=function(b){b=new DataView(b.target.result,0);for(var a=0,c=b.getInt32(a,!0),a=a+4,d=b.getInt32(a,!0),a=a+4,e=[],f=0;f<d;f++){var g=b.getFloat32(a,!0),a=a+4;e.push(g)}h.vertexs=e;d=b.getInt32(a,!0);a+=4;e=[];for(f=0;f<d;f++)g=b.getFloat32(a,!0),a+=4,e.push(g);h.normal=e;d=b.getInt32(a,!0);a+=4;e=[];for(f=0;f<d;f++)g=b.getFloat32(a,!0),a+=4,e.push(g);h.uv1=e;d=b.getInt32(a,!0);a+=4;e=[];for(f=0;f<d;f++)g=b.getFloat32(a,!0),a+=4,e.push(g);h.uv2=e;h.triangles=[];for(f=0;f<c;f++){for(var e={},g=b.getInt32(a,!0),a=a+4,k=[],d=0;d<g;d++){var l=b.getInt32(a,!0),a=a+4;k.push(l)}e.positionIndexs=k;g=b.getInt32(a,!0);a+=4;k=[];for(d=0;d<g;d++)l=b.getInt32(a,!0),a+=4,k.push(l);e.normalIndexs=k;g=b.getInt32(a,!0);a+=4;k=[];for(d=0;d<g;d++)l=b.getInt32(a,!0),a+=4,k.push(l);e.uv1Indexs=k;g=b.getInt32(a,!0);a+=4;k=[];for(d=0;d<g;d++)l=b.getInt32(a,!0),a+=4,k.push(l);e.uv2Indexs=k;d=b.getInt32(a,!0);a+=4;e.matId=d;h.triangles.push(e)}h.materialDatas=[];for(f=0;f<c;f++){e={};d=b.getInt32(a,!0);a+=4;e.id=d;k=b.getInt8(a,!0);a+=1;l=[];for(d=0;d<k;d++)g=b.getInt8(a,!0),l.push(g),a+=1;d=String.fromCharCode.apply(null,l);e.diffusePath=d;d=b.getFloat32(a,!0);a+=4;g=b.getFloat32(a,!0);a+=4;k=b.getFloat32(a,!0);a+=4;e.diffuseColor=[d,g,k];k=b.getInt8(a,!0);a+=1;l=[];for(d=0;d<k;d++)g=b.getInt8(a,!0),l.push(g),a+=1;d=String.fromCharCode.apply(null,l);e.lightMapPath=d;h.materialDatas.push(e)}f=b.getFloat32(a,!0);a+=4;c=b.getFloat32(a,!0);a+=4;d=b.getFloat32(a,!0);a+=4;h.position=[f,c,d];f=b.getFloat32(a,!0);a+=4;c=b.getFloat32(a,!0);a+=4;d=b.getFloat32(a,!0);a+=4;h.rotateAxis=[f,c,d];f=b.getFloat32(a,!0);a+=4;h.rotateAngle=f;c=b.getInt32(a,!0);a+=4;h.matrix=[];for(f=0;f<c;f++)d=b.getFloat32(a,!0),a+=4,h.matrix.push(d);q(h)}};p.send()};